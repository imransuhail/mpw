<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>pk.com.mypetworld.server</groupId>
  <artifactId>mpw</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>My Pet World Server Application</name>
  <url>http://maven.apache.org</url>
   <properties>
      <jersey.version>2.6</jersey.version>
      <org.springframework.version>3.2.8.RELEASE</org.springframework.version>
      <testng.version>5.12.1</testng.version> 
      <springsec.version>3.1.0.RELEASE</springsec.version>
      <maven.test.failure.ignore>true</maven.test.failure.ignore>
      
  </properties>
  
	<repositories>
	    <repository>
	        <id>java.net-Public</id>
	        <name>Maven Java Net Snapshots and Releases</name>
	        <url>https://maven.java.net/content/groups/public/</url>
	    </repository>
 		<repository>
		    <id>java.net2</id>
		    <name>Repository hosting the jee6 artifacts</name>
		    <url>http://download.java.net/maven/2</url>
 	 	</repository>
	
	

		<repository>
		  <id>spring-milestone</id>
		  <name>Spring Maven MILESTONE Repository</name>
		  <url>http://repo.spring.io/libs-milestone</url>
		</repository>
	</repositories>
            
	<dependencies>
	  
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>servlet-api</artifactId>
		<version>2.5</version>
	</dependency>
	  
	<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>1.1.1</version>
	</dependency>
	
		<!-- Spring 3 dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
 		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-asm</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		
		
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.7</version>
      <scope>test</scope>
    </dependency>
 	<!-- Jersey dependency -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
 
        <dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey.version}</version>
		</dependency>


<!--  I initially used it because i thought it has converters from string to jsonobject but this freaking library has shit! only shitty interface.
		keeping it just for times when we need some more shit in our project. Look at the fucking list of libraries we have so far. 
			<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.0.4</version>
		</dependency>		
 -->        	
		
		<dependency>
		    <groupId>com.fasterxml.jackson.jaxrs</groupId>
		    <artifactId>jackson-jaxrs-json-provider</artifactId>
		    <version>2.2.3</version>
		</dependency>
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-spring3</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
		        <exclusion>
		            <groupId>org.springframework</groupId>
		            <artifactId>spring-core</artifactId>
		        </exclusion>            
		        <exclusion>
		            <groupId>org.springframework</groupId>
		            <artifactId>spring-web</artifactId>
		        </exclusion>
		        <exclusion>
		            <groupId>org.springframework</groupId>
		            <artifactId>spring-beans</artifactId>
		        </exclusion>
		    </exclusions>      
        </dependency>
        
        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>
        
        
		
		<!-- SPRING MONGO DB DEPENDENCY -->
		 <dependency>
		   <groupId>org.springframework.data</groupId>
		   <artifactId>spring-data-mongodb</artifactId>
		   <version>1.3.4.RELEASE</version>
		 </dependency>
        
        <!-- SPRING SECURITY FRAMEWORK DEPENDENCIES -->
        <dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${springsec.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${springsec.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${springsec.version}</version>		
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-aspects</artifactId>
			<version>${springsec.version}</version>
		</dependency>
		
		<!-- Stupid library just to convert strings to json object find me a better way  ali -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20140107</version>
		</dependency>		
		
		<!-- SPRING TESTING DEPENDENCIES -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>9.1.0.M0</version>
		</dependency>
		            
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>9.1.0.M0</version>
		</dependency>
		
        <!-- LOG4J DEPENDENCY -->
        <dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
		
	
   </dependencies>
  <build>
    <finalName>mpw-server</finalName>
        <plugins>
        
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <target>1.7</target>
                    <source>1.7</source>
                </configuration>
            </plugin>
            <!-- This plugin is for running a web application directly from Maven. -->

			<plugin>
			  <groupId>org.eclipse.jetty</groupId>
			  <artifactId>jetty-maven-plugin</artifactId>
			  <version>9.1.2.v20140210</version>
			  
			</plugin>

			<plugin>
			  <groupId>org.codehaus.mojo</groupId>
			  <artifactId>exec-maven-plugin</artifactId>
			  <version>1.2.1</version>
			  <executions>
			    <execution>
			      <goals>
			        <goal>java</goal>
			      </goals> 
			    </execution>
			  </executions>
			  <configuration>
			    <mainClass>pk.com.mypetworld.server.test.MongoAppA</mainClass>
			    <classpathScope>test</classpathScope>			    
<!-- 			<arguments>
			      <argument>foo</argument>
			      <argument>bar</argument>
			    </arguments> 
-->
			  </configuration>
		</plugin>	
        </plugins>   
         
  </build>
</project>
