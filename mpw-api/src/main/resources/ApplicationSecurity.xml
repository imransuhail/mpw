<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">


    <context:component-scan base-package="com.pk.mypetworld" />

    <sec:authentication-manager  id="authenticationManager">
        <sec:authentication-provider>
          <sec:user-service id="userAuthService">
                <sec:user name="mpwapp" password="mpw" authorities="mpwuser" />
            </sec:user-service>         
        </sec:authentication-provider>
    </sec:authentication-manager>

   	<bean id="passwordEncoder" class="pk.com.mypetworld.server.security.SaltedSHA256PasswordEncoder">
		<constructor-arg value="secret" />
	</bean>
    <!--
    <sec:http  auto-config="true" create-session="stateless" use-expressions="true">
        <sec:intercept-url pattern="/x/v01/**"
            access="hasRole('')" />
     
    <sec:intercept-url pattern="/services/timeoftheday/asxml/**"
            access="hasRole('admin')" />
        <sec:intercept-url pattern="/services/timeoftheday/asjson/**"
            access="hasAnyRole('admin','customer')" />
        <sec:http-basic />
             
    </sec:http>
    
        -->   
	<!-- 
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="userDao">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
-->

    <sec:http pattern="/api/v01/users/authenticate" security="none"/>
    
    <sec:http
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless"
			entry-point-ref="unauthorizedEntryPoint"			
			authentication-manager-ref="authenticationManager">
		<sec:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />

		<sec:intercept-url method="GET" pattern="/api/v01/**" access="hasRole('mpwuser')" />
		<sec:intercept-url method="PUT" pattern="/api/v01/**" access="hasRole('mpwuser')" />
		<sec:intercept-url method="POST" pattern="/api/v01/**" access="hasRole('mpwuser')" />
		<sec:intercept-url method="DELETE" pattern="/api/v01/**" access="hasRole('mpwuser')" />   
	</sec:http>
	
    <bean id="unauthorizedEntryPoint" class="pk.com.mypetworld.server.security.UnauthorizedEntryPoint" />
    
    <bean class="pk.com.mypetworld.server.security.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
		<constructor-arg ref="userAuthService" />
	</bean>
    
    

</beans>
